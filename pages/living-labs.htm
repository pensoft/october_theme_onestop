url = "/living-labs"
layout = "default"
title = "Living Labs"
is_hidden = 0
meta_description = "living labs page"
seo_keywords = "keywords"
robot_index = "index"
robot_follow = "follow"

[jumbotron living-labs-intro]
jumbotron = "living-labs-intro"
templates = "template2" 
description_limit = 0

[jumbotron living-labs-outro]
jumbotron = "living-labs-outro"
templates = "template2" 
description_limit = 0

[siteSearchInclude]
==
<?php
use Pensoft\Partners\Models\Partners as Partner;
use RainLab\Location\Models\Country;

function onStart(){
    $this['living_labs'] = Partner::where('type', 2)->get();
    
    // Country name mapping
    $countryNames = [
        'RO' => 'Romania',
        'FI' => 'Finland',
        'BE' => 'Belgium', 
        'PT' => 'Portugal',
        'GB' => 'United Kingdom'
    ];
    
    // City name mapping for living labs
    $cityNames = [
        'RO' => 'Constanta',
        'FI' => 'Uusimaa',
        'BE' => 'Brussels',
        'PT' => 'Porto',
        'GB' => 'Coventry'
    ];
    
    // Get country names from database if available
    if (class_exists('RainLab\Location\Models\Country')) {
        $countries = Country::whereIn('code', array_keys($countryNames))->get();
        foreach ($countries as $country) {
            $countryNames[$country->code] = $country->name;
        }
    }
    
    // Prepare enhanced partner data for JavaScript
    $partnersData = [];
    foreach ($this['living_labs'] as $partner) {
        $countryCodes = is_array($partner->country_code) ? $partner->country_code : (json_decode($partner->country_code, true) ?: []);
        foreach ($countryCodes as $countryCode) {
            if (!isset($partnersData[$countryCode])) {
                $partnersData[$countryCode] = [
                    'countryName' => $countryNames[$countryCode] ?? $countryCode,
                    'partners' => []
                ];
            }
            $partnersData[$countryCode]['partners'][] = [
                'id' => $partner->id,
                'institution' => $partner->instituion,
                'description' => strip_tags($partner->content),
                'logo' => $partner->cover ? $partner->cover->getThumb(120, 80, 'auto') : null,
                'url' => $partner->instituion_url,
                'email' => $partner->email
            ];
        }
    }
    
    $this['partnersData'] = $partnersData;
    $this['countryNames'] = $countryNames;
    $this['cityNames'] = $cityNames;
}
?>
==
{% component 'siteSearchInclude' %}

<script>
// Make enhanced partner data available to JavaScript
window.livingLabsPartners = {{ partnersData|json_encode|raw }};
window.countryNames = {{ countryNames|json_encode|raw }};
window.cityNames = {{ cityNames|json_encode|raw }};
</script>

<div class="container-fluid living-labs-page">
    <div class="container">
        {% component 'living-labs-intro' %}
    </div>

    <div class="container map">
        {% partial 'components/living-labs-map' %}
        {% partial 'components/living-labs-popup' %}
    </div>

    <div class="container">
        {% component 'living-labs-outro' %}
    </div>
</div>

